@inject IVehicleService VehicleService;
@inject NavigationManager NavigationManager;
@page "/vehicle/{_number?}"
@using Services
@using System.Linq.Expressions
@rendermode InteractiveServer

<h3>vehicle</h3>

<EditForm FormName="vehicleForm" Model="_vehicle" Enhance="true" OnValidSubmit="OnValidSubmit">
	<DataAnnotationsValidator></DataAnnotationsValidator>
	<ValidationSummary></ValidationSummary>

	<div class="row mb-3">
		<div class="col-2">
			<label class="col-form-label">Brand</label>
		</div>
		<div class="col-6">
			<InputText @bind-Value="_vehicle.Brand"></InputText>
		</div>
	</div>

	<div class="row mb-3">

		<div class="col-2">
			<label class="col-form-label">Model</label>
		</div>
		<div class="col-6">
			<InputText @bind-Value="_vehicle.Model"></InputText>
		</div>
	</div>

	<div class="row mb-3">
		<div class="col-8">
			<input type="submit" value="Save" />
		</div>
		<div class="col-8">
			<input type="button" @onclick="@(()=>OnCancel())" value="Cancel" />
		</div>
	</div>
</EditForm>
@code {
	[Parameter]
	public string? _number { get; set; }

	private EditContext _editContext;
	private ValidationMessageStore? _messageStore;
	private Domain.Vehicle _vehicle { get; set; } = new();
	private string _email { get; set; }
	private IList<Domain.Vehicle> _vehicles { get; set; } = new List<Domain.Vehicle>();
	protected override async Task OnParametersSetAsync()
	{
		if (_number != null)
		{
			_vehicle = await VehicleService.GetVehicleByNumber(new Guid(_number!));
		}
	}
	
	protected override async Task OnInitializedAsync()
	{
		_editContext = new EditContext(_vehicle);
		_messageStore = new ValidationMessageStore(_editContext);

	}


	private async Task OnValidSubmit(EditContext editContext)
	{
		try
		{

			Console.WriteLine("OnValidSubmit");
			await VehicleService.RegisterNewVehicle(_vehicle);

			Console.WriteLine("RegisterNewvehicle");
			NavigationManager.NavigateTo("/lisvehicle");

			Console.WriteLine("NavigateTo");
		}
		catch (Exception ex)
		{
			Console.WriteLine(ex.Message);
		}
	
	}
	private void OnCancel()
	{
		NavigationManager.NavigateTo("/lisvehicle");
	}

}
